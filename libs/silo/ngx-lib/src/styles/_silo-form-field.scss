@use 'sass:map';
@use '~@angular/material' as mat;

@mixin silo-form-field-color($config-or-theme, $custom-theme) {
  // Extract the color configuration in case a theme has been passed.
  $color-config: mat.get-color-config($config-or-theme);
  $primary-palette: map.get($color-config, 'primary');
  $warn-palette: map.get($color-config, 'warn');
  $highlight-palette: map.get($custom-theme, 'palette', 'highlight');
  $success-palette: map.get($custom-theme, 'palette', 'success');
  $readonly-bg: map.get($custom-theme, 'background', 'readonly');
  $field-icon-color: map.get($custom-theme, 'foreground', 'field-icon');

  .silo-form-field-outline-container {
    box-sizing: border-box;
    box-shadow: 0 0 0 1px gray;
    border-radius: 2px;
    width: 100%;

    &:focus-within {
      box-shadow: 0 0 0 2px mat.get-color-from-palette($primary-palette);
    }
  }

  .silo-form-field-input-container {
    display: flex;
    align-items: center;
    box-sizing: border-box;
    border-left-width: 4px;
    border-left-style: solid;
    border-left-color: transparent;
    min-height: 34px;
  }

  // field icon color
  .silo-form-field-input-container {
    .mat-icon {
      color: $field-icon-color;
    }
  }

  .silo-form-field-suffix-container {
    display: flex;
    place-content: center;
    align-items: center;
    box-sizing: border-box;
    flex-direction: row;

    &.column {
      flex-direction: column;
    }
  }

  .silo-form-field-message-container {
    .mat-hint {
      font-size: 75%;
      line-height: 1.125;
      letter-spacing: 1.5px;
    }
  }

  // field is read-only
  .silo-form-field--is-readonly {
    .silo-form-field-outline-container {
      background-color: $readonly-bg;
    }
  }

  // highlight field is required
  .silo-form-field--is-required {
    .silo-form-field-outline-container {
      &:focus-within {
        box-shadow: 0 0 0 2px mat.get-color-from-palette($highlight-palette);
      }
    }

    .silo-form-field-input-container {
      border-left-color: mat.get-color-from-palette($highlight-palette);
    }
  }

  // highlight field has error
  .silo-form-field--has-error {
    .silo-form-field-outline-container {
      box-shadow: 0 0 0 2px mat.get-color-from-palette($warn-palette);

      &:focus-within {
        box-shadow: 0 0 0 2px mat.get-color-from-palette($warn-palette);
      }
    }

    .silo-form-field-input-container {
      border-left-color: mat.get-color-from-palette($warn-palette);
    }
  }

  // highlight field is filled
  .silo-form-field--is-filled {
    .silo-form-field-outline-container {
      &:focus-within {
        box-shadow: 0 0 0 2px mat.get-color-from-palette($success-palette);
      }
    }

    .silo-form-field-input-container {
      border-left-color: mat.get-color-from-palette($success-palette);
    }
  }
}

@mixin silo-form-field-theme($theme, $custom-theme) {
  // Extracts the color and typography configurations from the theme.
  $color: mat.get-color-config($theme);

  // Do not generate styles if configurations for individual theming
  // systems have been explicitly set to `null`.
  @if $color !=null {
    @include silo-form-field-color($color, $custom-theme);
  }
}
